boxplot(temp)
boxplot(temp$Accuracy)
iter = 20 #liczba uruchomien algorytmu
for(i in 1:20){
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
temp <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
P= list(20)
P = list(list())
P = list()
P[[1]]  = list(kupa = c(1,2,3), z= (0,1))
P[[1]]  = list(kupa = c(1,2,3), z= c(0,1,0))
LIST=list()
for(i in 1:20){
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
iter = 20 #liczba uruchomien algorytmu
err <- function(y.true, y.pred) { sum(y.pred!=y.true)/length(y.true) }
predc <- function(...) { predict(..., type="c") }
library(e1071)
library(randomForest)
library(tidyverse)
library(tidyr)
library(caret)
students<- read.csv("../data/students.csv",header=TRUE)
students$X <- NULL
students$Walc = as.factor(students$Walc)
students$Dalc = as.factor(students$Dalc)
seed <- 7
metric <- "Accuracy"
set.seed(seed)
customRF <- list(type = "Classification", library = "randomForest", loop = NULL)
customRF$parameters <- data.frame(parameter = c("mtry", "ntree", "maxnodes"), class = rep("numeric", 3), label = c("mtry", "ntree", "maxnodes"))
customRF$grid <- function(x, y, len = NULL, search = "grid") {}
customRF$fit <- function(x, y, wts, param, lev, last, weights, classProbs, ...) {
randomForest(x, y, mtry = param$mtry, ntree=param$ntree, maxnodes=param$maxnodes, ...)
}
customRF$predict <- function(modelFit, newdata, preProc = NULL, submodels = NULL)
predict(modelFit, newdata)
customRF$prob <- function(modelFit, newdata, preProc = NULL, submodels = NULL)
predict(modelFit, newdata, type = "prob")
customRF$sort <- function(x) x[order(x[,1]),]
customRF$levels <- function(x) x$classes
control <- trainControl(## 10-fold CV
method = "cv",
number = 10)
tunegrid <- expand.grid(mtry=c(7), ntree=c(100), maxnodes=c(3,10,20,50, 100, 150))
iter = 20 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
LIST[[1]]
LIST[[2]]
temp = unlist(LIST[[1]])
temp
temp = LIST[[1]]
temp
LIST[[2]]['Accuracy']
LIST[[2]]$Accuracy
LIST[[2]]
LIST[[2]]['Accuracy']
temp
to_boxplot = temp
unname(sapply(LIST, `[[`, 1))
p = lapply(LIST, `[[`, 1)
p
temp$Accuracy
temp['Accuracy']
temp$
temp
temp
temp[1]
temp[[1]]
tt = to.data.frame(temp)
tt = as.data.frame(temp)
tt
tt$Accuracy
i=1
temp = LIST[[i]]
temp
tt = as.data.frame(temp)
tt
nam <- paste(tt$Accuracy, 2, sep = "")
temp = LIST[[2]]
tt = as.data.frame(temp)
tt
#step 1
z =  as.data.frame(LIST[[1]])
z
temp = temp$Accuracy
temp
temp = as.data.frame(LIST[[2]])
temp
temp$Accuracy
temp['Accuracy']
dane_do_przypis = temp['Accuracy']
nam <- paste(z$Accuracy, 2, sep = "")
assign(nam, dane_do_przypis)
z
z$Accuracy2 = dane_do_przypis
z
nam
nam <- paste(z$Accuracy, 2, sep = "")
nam
nam <- paste("z$Accuracy", 2, sep = "")
nam
#step 1
z = 0
z =  as.data.frame(LIST[[1]])
i=1
temp = as.data.frame(LIST[[2]])
dane_do_przypis = temp['Accuracy']
nam <- paste("z$Accuracy", 2, sep = "")
nam =  dane_do_przypis
z
nam <-  dane_do_przypis
z
o = rbind(as.data.frame(LIST[[1]]), as.data.frame(LIST[[2]]))
o
o = rbind(as.data.frame(LIST[[i]))
o = rbind(as.data.frame(LIST[[i]]))
for (i in 1:iter){
rbind(as.data.frame(LIST[[i]]), as.data.frame(LIST[[i]]))
i= i +1
return P
}
for (i in 1:iter){
P = rbind(as.data.frame(LIST[[i]]), as.data.frame(LIST[[i]]))
i= i +1
}
P
datalist = 0
datalist = list()
library(data.table)
z = rbindlist(LIST, fill=TRUE)
z = rbindlist(LIST, fill=FALSE)
z
rbindlist(LIST, fill=FALSE)
z
rbindlist(LIST)
rbindlist(LIST, use.names=TRUE)
rbindlist(LIST, use.names=FALSE)
rbindlist(LIST, use.names="check", fill=FALSE, idcol=NULL)
rbindlist(LIST, use.names="check", fill=TRUE)
rbindlist(LIST, use.names="check")
rbindlist(LIST, use.names=TRUE)
LIST
dfs <- lapply(LIST, data.frame, stringsAsFactors = FALSE)
dfs
library(dplyr)
rbind_all(LIST)
bind_rows(LIST)
bind_rows(LIST[[1]],LIST[[2]])
z =
list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
z
z+= list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
z=+list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
z=bind_rows(list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) ))
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
output <- bind_rows(list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) ) )
}
iter = 20 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
P = lapply(LIST, as.data.frame)
P = lapply(LIST[[1]], as.data.frame)
P = lapply(LIST, as.data.frame)
bind_rows(P)
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
output
boxplot(output$maxnodes, output$Accuracy)
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( output$maxnodes, output$Accuracy,
horizontal = TRUE)
boxplot( output$maxnodes, output$Accuracy,
horizontal = TRUE)
boxplot( output$maxnodes, output$Accuracy,
horizontal = FALSE)
boxplot(  output$Accuracy,
horizontal = FALSE)
mxnod = output$maxnodes
acc = output$Accuracy
boxplot(mxnod, acc,
horizontal = FALSE)
boxplot( acc, mxnod,
horizontal = FALSE)
boxplot( acc, mxnod,
horizontal = TRUE)
boxplot( acc,
horizontal = TRUE)
boxplot( acc,mxnod,
at = c(1,2),
horizontal = TRUE)
boxplot( acc,mxnod,
at = c(1,2),
las = 2
horizontal = TRUE)
boxplot( acc,mxnod,
at = c(1,2),
notch = TRUE
horizontal = TRUE)
boxplot( acc,mxnod,
at = c(1,2),
notch = TRUE,
horizontal = TRUE)
boxplot( acc,mxnod,
at = c(1,2),
las = 2,
horizontal = TRUE)
boxplot( mxnod~acc,
at = c(1,2),
las = 2,
horizontal = TRUE)
boxplot( output$maxnodes~output$Accuracy,
#        las = 2,
horizontal = TRUE)
boxplot( mxnod~acc,
#        las = 2,
horizontal = TRUE)
boxplot( acc~mxnod,
#        las = 2,
horizontal = TRUE)
boxplot( acc~mxnod,
#        las = 2,
horizontal = FALSE)
boxplot( Accuracy~maxnodes,
data=airquality,
horizontal = FALSE)
boxplot( Accuracy~maxnodes,
data=output,
horizontal = FALSE)
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami, liczba drzew 100, liczba losowań zmiennej 7",
horizontal = FALSE
)
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami,
liczba drzew 100, liczba losowań zmiennej 7",
horizontal = FALSE
)
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami
liczba drzew 100, liczba losowań zmiennej 7",
horizontal = FALSE
)
typeof(LIST)
class(LIST)
class(output)
typeof(output)
iter = 100 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami
liczba drzew 100, liczba losowań zmiennej 7",
horizontal = FALSE
)
err <- function(y.true, y.pred) { sum(y.pred!=y.true)/length(y.true) }
predc <- function(...) { predict(..., type="c") }
library(e1071)
library(randomForest)
library(tidyverse)
library(tidyr)
library(caret)
students<- read.csv("../data/students.csv",header=TRUE)
students$X <- NULL
students$Walc = as.factor(students$Walc)
students$Dalc = as.factor(students$Dalc)
## testuje 20 razy model dla 2 stalych paramtrow, 1 zmienny
seed <- 7
metric <- "Accuracy"
set.seed(seed)
customRF <- list(type = "Classification", library = "randomForest", loop = NULL)
customRF$parameters <- data.frame(parameter = c("mtry", "ntree", "maxnodes"), class = rep("numeric", 3), label = c("mtry", "ntree", "maxnodes"))
customRF$grid <- function(x, y, len = NULL, search = "grid") {}
customRF$fit <- function(x, y, wts, param, lev, last, weights, classProbs, ...) {
randomForest(x, y, mtry = param$mtry, ntree=param$ntree, maxnodes=param$maxnodes, ...)
}
customRF$predict <- function(modelFit, newdata, preProc = NULL, submodels = NULL)
predict(modelFit, newdata)
customRF$prob <- function(modelFit, newdata, preProc = NULL, submodels = NULL)
predict(modelFit, newdata, type = "prob")
customRF$sort <- function(x) x[order(x[,1]),]
customRF$levels <- function(x) x$classes
control <- trainControl(## 10-fold CV
method = "cv",
number = 10)
tunegrid <- expand.grid(mtry=c(9), ntree=c(50), maxnodes=c(3,10,20,50, 100, 150))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Walc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy dla zmiennej Walc z 2 stałymi parametrami
liczba drzew 50, liczba losowań zmiennej 9",
horizontal = FALSE
)
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy dla zmiennej Walc z 2 stałymi parametrami
liczba drzew 50, liczba losowań zmiennej 9",
horizontal = FALSE
)
tunegrid <- expand.grid(mtry=c(9), ntree=c(100), maxnodes=c(3,10,20,50, 100, 150))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Walc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy dla zmiennej Walc z 2 stałymi parametrami
liczba drzew 100, liczba losowań zmiennej 9",
horizontal = FALSE
)
tunegrid <- expand.grid(mtry=c(9), ntree=c(100), maxnodes=c(3,10,20,50, 100, 150))
tunegrid <- expand.grid(mtry=c(9), ntree=c(1,10,30,100,300,500), maxnodes=c(50))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Walc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~ntree,
data=output,
main="Wykres pudełkowy dla zmiennej Walc z 2 stałymi parametrami
liczba podziałów 50, liczba losowań zmiennej 9",
horizontal = FALSE
)
tunegrid <- expand.grid(mtry=c(1:9), ntree=c(100), maxnodes=c(50))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Walc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~mtry,
data=output,
main="Wykres pudełkowy dla zmiennej Walc z 2 stałymi parametrami
liczba drzew 100, max. liczba podziałóW 50",
horizontal = FALSE
)
#mtry ntree maxnodes replace
#248    7    10       50    TRUE
#tunegrid <- expand.grid(mtry=c(7), ntree=c(100), maxnodes=c(3,10,20,50, 100, 150))
tunegrid <- expand.grid(mtry=c(7), ntree=c(1,10,30,100,300,500), maxnodes=c(10))
#tunegrid <- expand.grid(mtry=c(7), ntree=c(100), maxnodes=c(3,10,20,50, 100, 150))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~ntree,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami
liczba podzialow 10, liczba losowań zmiennej 7",
horizontal = FALSE
)
tunegrid <- expand.grid(mtry=c(1:9), ntree=c(100), maxnodes=c(10))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~mtry,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami
liczba podzialow 10, liczba drzew 100",
horizontal = FALSE
)
tunegrid <- expand.grid(mtry=c(1:9), ntree=c(100), maxnodes=c(10))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~mtry,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami
liczba podzialow 10, liczba drzew 100",
horizontal = FALSE
)
tunegrid <- expand.grid(mtry=c(1:9), ntree=c(200), maxnodes=c(40))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~mtry,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami
liczba podzialow 40, liczba drzew 200",
horizontal = FALSE
)
tunegrid <- expand.grid(mtry=c(7), ntree=c(100), maxnodes=c(3,10,20,50, 100, 150))
#tunegrid <- expand.grid(mtry=c(7), ntree=c(1,10,30,100,300,500), maxnodes=c(10))
#tunegrid <- expand.grid(mtry=c(1:9), ntree=c(200), maxnodes=c(40))
iter = 30 #liczba uruchomien algorytmu
LIST=list()
for(i in 1:iter){
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
custom_D <- train(Dalc~., data=train, method=customRF, metric=metric, tuneGrid=tunegrid, trControl=control)
LIST[[i]] <- list(select(custom_D$results, c('mtry','ntree','maxnodes','Accuracy') ) )
}
# prepocess data
temp = lapply(LIST, as.data.frame)
output = bind_rows(temp)
boxplot( Accuracy~maxnodes,
data=output,
main="Wykres pudełkowy z 2 stałymi parametrami
liczba losowanych zmiennych 7, liczba drzew 100",
horizontal = FALSE
)
