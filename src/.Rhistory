cls = c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
library(tidyr)
library(ggplot2)
library(Hmisc)
mat_students <- read.csv("student-mat.csv",header=TRUE)
por_students <- read.csv("student-por.csv",header=TRUE)
students = rbind(mat_students, por_students)
cls = c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
students <- students[!duplicated(students[,cls]),]
library(tidyr)
library(ggplot2)
library(Hmisc)
mat_students <- read.csv("../data/student-mat.csv",header=TRUE)
por_students <- read.csv("../data/student-por.csv",header=TRUE)
students = rbind(mat_students, por_students)
cls = c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
students <- students[!duplicated(students[,cls]),]
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hgD = hist(students$Dalc,plot = FALSE)
hgW =  hist(students$Walc, plot = FALSE)
hgD$density = hgD$counts/sum(hgD$counts)*100
hgW$density = hgW$counts/sum(hgW$counts)*100
plot(hgD, freq=FALSE, col = c2, main="Spożycie alkoholu", ylab = "Studenci [%]", xlab= "od 1 - bardzo rzadko to 5 - bardzo często") # Plot 1st histogram using a transparent color
plot(hgW,   freq=FALSE, col = c1, add = TRUE) # Add 2nd histogram using different color
legend("topright",
c("weekend", "dzień pracujący"),
lty=c(10, 2, 10),
col=c(c1,c2),
bty = "n")
summary(students)
qqnorm(students$Dalc)
hist(students$Dalc)
hist(students$Dalc, breaks=seq(0,5, 1))
hist(students$Dalc, breaks=seq(0,6, 1))
hist(students$Dalc, breaks=seq(1,6, 1))
hist(students$Dalc, breaks=seq(1,5, 1))
View(students)
View(students)
View(students)
hist(students$Dalc, breaks=seq(0,5, 1))
hist(students$Dalc, breaks=seq(0.5,5, 1))
hist(students$Dalc, breaks=seq(-1,5, 1))
write.csv(students,'students.csv')
rm(list=ls())
dev.off()
graphics.off()
students<- read.csv("../data/students.csv",header=TRUE)
View(students)
View(students)
#biblioteka do bayesa
library(e1071)
library(randomForest)
students<- read.csv("../data/students.csv",header=TRUE)
install.packages("randomForest")
library(e1071)
library(randomForest)
#biblioteka do bayesa
if (! "e1071" %in% row.names(installed.packages()))
install.packages("e1071")
if (! "randomForest" %in% row.names(installed.packages()))
install.packages("randomForest")
library(e1071)
library(randomForest)
students<- read.csv("../data/students.csv",header=TRUE)
students<- read.csv("../data/students.csv",header=TRUE)
sapply(students, class)
library(randomForest)
students<- read.csv("../data/students.csv",header=TRUE)
students <- students[~c(1)]
View(students)
View(students)
students$X <- NULL
View(students)
View(students)
sample = sample.split(students$num, SplitRatio = .8)
sample = students.split(students$num, SplitRatio = .8)
sample <- sample.int(n = nrow(students), size = floor(.8*nrow(students)), replace = F)
train <- students[sample, ]
test  <- students[-sample, ]
